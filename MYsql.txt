create database haloPetani;
use haloPetani;
CREATE TABLE pengguna (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50),
    password VARCHAR(255),
    noHP VARCHAR(20),
    tanggal_daftar date,
    total_quality_point int);
create table admin(
    id_admin int not null primary key auto_increment,
    nama varchar (100) not null,
    password varchar (10),
    hashed_password VARCHAR(255) NOT NULL AFTER password;
create table jenis_tanaman(
    id_tanaman int not null primary key auto_increment,
    nama_ilmiah varchar (100),
    nama_umum varchar (100) not null,
    keluarga varchar (100) not null,
    genus varchar (100) not null,
    spesies varchar (100) not null,
    deskripsi TEXT,
    asal varchar (100) not null,
    habitat varchar (100) not null,
    kegunaan TEXT,
    cara_perawatan TEXT,
    foto varchar (50),
    Status_konservasi varchar (100),
    kondisi_pertumbuhan TEXT);
create table jenis_artikel(
    id_jenis_artikel int not null primary key auto_increment,
    nama_jenis_artikel varchar (100) not null);
create table artikel(
    id_artikel int not null primary key auto_increment,
    id_admin int not null,
    id_jenis_artikel int not null,
    judul_artikel varchar (100) not null,
    isi_artikel TEXT,
    tanggal_posting date not null,
    rata_rata_rating double precision,
    foreign key (id_admin) references admin (id_admin),
    foreign key (id_jenis_artikel) references jenis_artikel (id_jenis_artikel));
 create table pertanyaan(
    id_pertanyaan int not null primary key auto_increment,
    id_tanaman int,
    id_pengguna int,
    judul_pertanyaan varchar (100) not null,
    isi_pertanyaan TEXT,
    tanggal_posting date,
    kategori VARCHAR(255),
    foto LONGBLOB,
    status_dilaporkan boolean default false,
    foreign key (id_tanaman) references jenis_tanaman(id_tanaman),
    foreign key (id_pengguna) references pengguna (id));
create table jawaban(
    id_jawaban int not null primary key auto_increment,
    id_pertanyaan int,
    id_pengguna int,
    isi_jawaban TEXT,
    tanggal_posting date,
    like_count int default 0,
    status_dilaporkan boolean default false,
    foreign key (id_pertanyaan) references pertanyaan (id_pertanyaan),
    foreign key (id_pengguna) references pengguna(id));
CREATE TABLE rating_jawaban (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_jawaban INT NOT NULL,
    id_pengguna INT NOT NULL,
    nilai INT NOT NULL CHECK (nilai >= 1 AND nilai <= 5),
    tanggal_rating DATE NOT NULL,
    FOREIGN KEY (id_jawaban) REFERENCES jawaban(id_jawaban),
    FOREIGN KEY (id_pengguna) REFERENCES pengguna(id));
CREATE TABLE Like_button (
  id INT PRIMARY KEY AUTO_INCREMENT,
  question_id INT NOT NULL,
  content TEXT NOT NULL,
  likes INT DEFAULT 0,
  user_id INT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
create table quality_point(
    id_quality_point int not null primary key auto_increment,
    id_pengguna int,
    id_jawaban int,
    jumlah_point int,
    tanggal_pemberian date,
    foreign key (id_pengguna) references pengguna (id),
    foreign key (id_jawaban) references jawaban (id_jawaban));
create table rating_artikel(
    id_rating_artikel int not null primary key auto_increment,
    id_artikel int,
    id_pengguna int,
    rating float,
    tanggal_rating date,
    foreign key (id_artikel) references artikel (id_artikel),
    foreign key (id_pengguna) references pengguna (id));
create table laporan(
    id_laporan int not null primary key auto_increment,
    id_pengguna int,
    id_pertanyaan int,
    id_jawaban int,
    alasan_laporan TEXT,
    tanggal_laporan date,
    foreign key (id_pengguna) references pengguna (id),
    foreign key (id_pertanyaan) references pertanyaan (id_pertanyaan),
    foreign key (id_jawaban) references jawaban (id_jawaban));
